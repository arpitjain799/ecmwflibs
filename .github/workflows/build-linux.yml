# (C) Copyright 2020 ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.

name: Build Linux

on:
  push:
    branches: [ master ]

  # pull_request:
  #   branches: [ master ]

  # release:
  #   types: [created]

# python3.8 -c "import pip._internal; [print(n) for n in pip._internal.pep425tags.get_supported()]"
# See https://github.com/peter-evans/repository-dispatch

# We use checkout@v1:
# see https://github.com/actions/runner/issues/337

jobs:
  build:

    strategy:
      # fail-fast: false
      matrix:
        dockcross:
        # - manylinux1-x64
        - manylinux2010-x64
        - manylinux2014-x64

    runs-on: ubuntu-latest
    container: dockcross/${{ matrix.dockcross }}:latest


    name: Build using ${{ matrix.dockcross }}

    steps:
      - uses: actions/checkout@v1

      - run: ./scripts/build-${{ matrix.dockcross }}.sh

      # - run: make netcdf
      # - run: make proj
      # - run: make pull
      # - run: make wheels

      # - run: env|sort

      - uses: actions/upload-artifact@v1
        name: Upload wheel 3.6
        with:
          name: wheel-${{ matrix.dockcross }}-3.6
          # v1 needs a full path
          path: ${{ runner.workspace }}/ecmwflibs/wheelhouse/*cp36*

      # - uses: actions/upload-artifact@v1
      #   name: Upload wheel 3.7
      #   with:
      #     name: wheel-${{ matrix.dockcross }}-3.7
      #     path: wheelhouse/*cp37*

      # - uses: actions/upload-artifact@v1
      #   name: Upload wheel 3.8
      #   with:
      #     name: wheel-${{ matrix.dockcross }}-3.8
      #     path: wheelhouse/*cp38*

      # - uses: actions/upload-artifact@v1
      #   name: Upload wheel 3.9
      #   with:
      #     name: wheel-${{ matrix.dockcross }}-3.9
      #     path: wheelhouse/*cp39*

  test:

    needs: build

    strategy:
      # fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        dockcross: ["manylinux2014-x64"] #, "manylinux2010-x64"]
        container:
        - 'debian:testing'
        - 'ubuntu:14.04'
        - 'ubuntu:devel'
        - 'centos:7'
        - 'centos:8'
        - 'centos:latest'

    runs-on: ubuntu-latest
    container: ${{ matrix.container }}

    name: Test with ${{ matrix.dockcross }} ${{ matrix.python-version }} ${{ matrix.container }}

    steps:

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/download-artifact@v2
        with:
          name: wheel-${{ matrix.dockcross }}-${{ matrix.python-version }}

      - run: pip install *.whl

      - run: pip install -r tests/requirements.txt

      - run: pip freeze

      - name: Get some data
        run: |
          curl -L http://download.ecmwf.int/test-data/magics/2m_temperature.grib -o data.grib
          curl -L https://github.com/ecmwf/climetlab/raw/master/docs/examples/test.grib -o climetlab.grib
          curl -L https://github.com/ecmwf/climetlab/raw/master/docs/examples/test.nc -o climetlab.nc
          ls -l
        working-directory: tests

      - run: pytest -v -s
        working-directory: tests

      - uses: actions/upload-artifact@v2
        with:
          name: tests-${{ matrix.dockcross }}-${{ matrix.python-version }}-${{ matrix.container }}
          path: tests/*.png

  deploy:

    if: ${{ github.event_name == 'release' }}

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        dockcross: ["manylinux2014-x64"] #, "manylinux2010-x64"]

    needs: [test, build]

    name: Deploy wheel ${{ matrix.python-version }} ${{ matrix.dockcross }}

    runs-on: ubuntu-latest


    steps:

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - run: pip install twine

      - uses: actions/download-artifact@v2
        with:
          name: wheel-${{ matrix.dockcross }}-${{ matrix.python-version }}

      - run: twine upload *.whl
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
