# (C) Copyright 2020 ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.

name: Build Windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
        architecture: ["x86", "x64"]

    name: Build with Python ${{ matrix.python-version }} ${{ matrix.architecture }}
    env:
      WINARCH: ${{ matrix.architecture }}

    steps:

      - uses: actions/checkout@v2

      - uses: seanmiddleditch/gha-setup-vsdevenv@master
        with:
          arch: ${{ matrix.architecture }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Cache install tools
        uses: actions/cache@v2
        with:
          path: c:\vcpkg
          key: ${{ runner.os }}${{ matrix.architecture }}-tools-${{ hashFiles('make/tools-windows.make') }}

      - run: make tools

      - name: find
        if: false
        run: |
          import os
          print(os.name)
          for root, _, files in os.walk("c:/vcpkg"):
              try:
                for file in files:
                    if file.endswith(".db"):
                        print(os.path.join(root, file))
              except Exception as e:
                print(e)
        shell: python

      - name: Cache compilations
        if: false
        uses: actions/cache@v2
        with:
          path: |
            src
            build-ecmwf
            install
          key: ${{ runner.os }}${{ matrix.architecture }}-cache-${{ hashFiles('make/VERSIONS.make') }}

      - run: make wheel

      - uses: actions/upload-artifact@v2
        with:
          name: wheel-windows-${{ matrix.python-version }}-${{ matrix.architecture }}
          path: dist/*

  test:
    needs: build
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
        architecture: ["x86", "x64"]

    name: Test with Python ${{ matrix.python-version }}

    steps:

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - uses: actions/download-artifact@v2
        with:
          name: wheel-windows-${{ matrix.python-version }}-${{ matrix.architecture }}

      - run: ls -l

      - run: pip install --user *.whl

      - run: pip install --user -r tests/requirements.txt

      - run: pytest tests
