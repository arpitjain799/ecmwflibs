# (C) Copyright 2020 ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.

name: Build MacOS

on:
  # push:
  #   branches: [ master ]

  # pull_request:
  #   branches: [ master ]

  release:
    types: [created]

jobs:

  build:

    # if: false

    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        # python-version: ["3.8"]

    name: Build with Python ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - run: ./scripts/macos.sh
        shell: bash

      - uses: actions/upload-artifact@v2
        with:
          name: wheel-macos-${{ matrix.python-version }}
          path: wheelhouse/*

  test:
    needs: build
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        # python-version: ["3.8"]

    name: Test with Python ${{ matrix.python-version }}

    steps:

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/download-artifact@v2
        with:
          name: wheel-macos-${{ matrix.python-version }}

      # This is needed by mumpy and python 3.9
      - run: pip install numpy==1.18.0

      - run: pip install *.whl

      - run: pip install -r tests/requirements.txt

      - run: pip freeze

      - name: Get some data
        run: |
          curl -L http://download.ecmwf.int/test-data/magics/2m_temperature.grib -o data.grib
          curl -L https://github.com/ecmwf/climetlab/raw/master/docs/examples/test.grib -o climetlab.grib
          curl -L https://github.com/ecmwf/climetlab/raw/master/docs/examples/test.nc -o climetlab.nc
          ls -l
        working-directory: tests

      - run: pytest -v -s
        working-directory: tests

      - uses: actions/upload-artifact@v2
        with:
          name: tests-macos-${{ matrix.python-version }}
          path: tests/*.png

  deploy:

    if: ${{ github.event_name == 'release' }}

    needs: [test, build]

    name: Deploy wheel ${{ matrix.python-version }}

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        # python-version: ["3.8"]

    steps:

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - run: pip install twine

      - uses: actions/download-artifact@v2
        with:
          name: wheel-macos-${{ matrix.python-version }}

      - run: twine upload *.whl
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
