# (C) Copyright 2020 ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-macos:
    if: false

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install tools dependencies
        run: |
          make tools

      - name: Cache compilations (src)
        uses: actions/cache@v2
        with:
          path: src
          key: ${{ runner.os }}-src-${{ hashFiles('make/VERSIONS.make') }}

      - name: Cache compilations (build)
        uses: actions/cache@v2
        with:
          path: build-ecmwf
          key: ${{ runner.os }}-build-ecmwf-${{ hashFiles('make/VERSIONS.make') }}

      - name: Cache compilations (install)
        uses: actions/cache@v2
        with:
          path: install
          key: ${{ runner.os }}-install-${{ hashFiles('make/VERSIONS.make') }}

      - name: make libraries
        run: |
          make libraries

      - name: make wheel
        run: |
          make wheel

      - uses: actions/upload-artifact@v2
        with:
          name: wheel-macos
          path: wheelhouse/*


  # TODO: prepare the docker image:
  # https://docs.github.com/en/actions/guides/publishing-docker-images
  # https://github.com/marketplace/actions/build-docker-images-using-cache

  build-manylinux2014:
    if: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create docker image
        run: |
          make dockcross-build-ecmwflibs

      - name: Install tools dependencies
        run: |
          ./dockcross-build-ecmwflibs make tools

      - name: Cache compilations (src)
        uses: actions/cache@v2
        with:
          path: src
          key: ${{ runner.os }}-src-${{ hashFiles('make/VERSIONS.make') }}

      - name: Cache compilations (build)
        uses: actions/cache@v2
        with:
          path: build-ecmwf
          key: ${{ runner.os }}-build-ecmwf-${{ hashFiles('make/VERSIONS.make') }}

      - name: Cache compilations (install)
        uses: actions/cache@v2
        with:
          path: install
          key: ${{ runner.os }}-install-${{ hashFiles('make/VERSIONS.make') }}

      - name: make pango/cairo
        # if: steps.cache.outputs.cache-hit != 'true'
        run: |
          ./dockcross-build-ecmwflibs make pango

      - name: make proj
        run: |
          ./dockcross-build-ecmwflibs make proj

      - name: make libraries
        run: |
          ./dockcross-build-ecmwflibs make libraries

      - name: make wheel
        run: |
          ./dockcross-build-ecmwflibs make wheel

      - uses: actions/upload-artifact@v2
        with:
          name: wheel-manylinux2014
          path: wheelhouse/*


  build-windows:

    runs-on: windows-latest


    steps:

      - name: configure
        # if: false
        run: |
          echo "::add-path::c:\msys64\mingw64\bin"
          # cat "C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
          vcpkg search boost

      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-vsdevenv@master

      - name: Cache install tools
        uses: actions/cache@v2
        with:
          path: c:\vcpkg
          key: ${{ runner.os }}-install-tools-${{ hashFiles('make/tools-windows.make') }}


      - name: Install tools dependencies
        # if: false
        run: |
          make tools

      - name: eccodes
        run: |
          make eccodes

      - name: magics
        # if: false
        env:
          PYTHONPATH: c:\hostedtoolcache\windows\python\3.7.9\x64\lib\site-packages
        run: |
          make magics

      - name: wheel
        if: false
        run: |
          make wheel

      - name: list2
        run: |
          import os
          print(os.name)
          for root, _, files in os.walk("."):
              for file in files:
                  if file.endswith(".whl"):
                      print(os.path.join(root, file))
        shell: python

      - uses: actions/upload-artifact@v2
        with:
          name: wheel-windows
          path: dist/*
